# test_specific_order.py
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –∏–∑ Shopify
"""
import base64
import hashlib
import hmac
import json
import requests
import os
from dotenv import load_dotenv

load_dotenv()


def run_order_webhook(order_id: int):
    """
    –°–∏–º—É–ª–∏—Ä—É–µ—Ç webhook –æ—Ç Shopify –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞.
    –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ API, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫ webhook.
    """

    # 1. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –∏–∑ Shopify
    print(f"üì• –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑ #{order_id} –∏–∑ Shopify...")

    from app.services.shopify_service import get_order
    try:
        order_data = get_order(order_id)
        print(f"‚úÖ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω: {order_data.get('name')} –æ—Ç {order_data.get('customer', {}).get('first_name')}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {e}")
        return

    # 2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º webhook payload
    webhook_url = "http://localhost:8001/webhooks/shopify/orders"
    secret = os.getenv("SHOPIFY_WEBHOOK_SECRET", "test_secret")

    # Shopify –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ webhook
    payload = order_data

    # 3. –°–æ–∑–¥–∞–µ–º HMAC –ø–æ–¥–ø–∏—Å—å
    body = json.dumps(payload, ensure_ascii=False, separators=(",", ":")).encode("utf-8")
    digest = hmac.new(secret.encode("utf-8"), body, hashlib.sha256).digest()
    signature = base64.b64encode(digest).decode("utf-8")

    print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook –Ω–∞ {webhook_url}")
    print(f"   –ü–æ–¥–ø–∏—Å—å: {signature[:20]}...")

    # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
    try:
        response = requests.post(
            webhook_url,
            data=body,
            headers={
                "Content-Type": "application/json",
                "X-Shopify-Hmac-Sha256": signature,
            },
            timeout=30
        )

        print(f"\nüì® –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –¢–µ–ª–æ: {response.text}")

        if response.status_code == 200:
            result = response.json()
            if result.get("status") == "duplicate":
                print("\n‚ö†Ô∏è –ó–∞–∫–∞–∑ —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ä–∞–Ω–µ–µ")
            else:
                print("\n‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
                print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {response.status_code}")

    except requests.exceptions.ConnectionError:
        print("\n‚ùå –ù–µ –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω:")
        print("   uvicorn app.main:app --host 0.0.0.0 --port 8001")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")


if __name__ == "__main__":
    # ID –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞
    ORDER_ID = 6417067999535

    print("=" * 50)
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ #{ORDER_ID}")
    print("=" * 50)

    run_order_webhook(ORDER_ID)