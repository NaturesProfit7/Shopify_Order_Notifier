#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∞–¥—Ä–µ—Å–æ–≤
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
root_dir = Path(__file__).resolve().parent
sys.path.insert(0, str(root_dir))


def test_fixed_logic():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ —Å —á–µ—Ç–∫–∏–º —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º —Ä–æ–ª–µ–π"""

    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –õ–û–ì–ò–ö–ò –ê–î–†–ï–°–û–í")
    print("=" * 60)

    # –í–∞—à –ø—Ä–∏–º–µ—Ä —Å —Ä–∞–∑–Ω—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏
    order_data = {
        "id": 6435861004591,
        "order_number": 1717,
        "shipping_address": {
            "first_name": "Valeriia",
            "last_name": "Klink",
            "phone": "0967489260",
            "address1": "142",
            "city": "–û–¥–µ—Å–∞"
        },
        "billing_address": {
            "first_name": "–ù–∞—Ç–∞–ª—ñ—è",
            "last_name": "–ö–ª—ñ–Ω–∫",
            "phone": "0674219291",
            "address1": "142",
            "city": "–û–¥–µ—Å–∞"
        }
    }

    print(f"üìã –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï:")
    print(
        f"Shipping (–∑–∞–∫–∞–∑—á–∏–∫): {order_data['shipping_address']['first_name']} {order_data['shipping_address']['last_name']}")
    print(
        f"Billing (–ø–æ–ª—É—á–∞—Ç–µ–ª—å): {order_data['billing_address']['first_name']} {order_data['billing_address']['last_name']}")

    # –ü—Ä–∏–º–µ–Ω—è–µ–º –ª–æ–≥–∏–∫—É
    from app.services.address_utils import (
        get_delivery_and_contact_info,
        addresses_are_same,
        build_delivery_address_text,
        get_contact_name,
        get_contact_phone_e164
    )

    shipping = order_data['shipping_address']
    billing = order_data['billing_address']

    are_same = addresses_are_same(shipping, billing)
    print(f"–ê–¥—Ä–µ—Å–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ: {are_same}")

    delivery_address, contact_info = get_delivery_and_contact_info(order_data)

    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –õ–û–ì–ò–ö–ò:")
    print(
        f"–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_address['first_name']} {delivery_address['last_name']} (–∏–∑ {'shipping' if delivery_address == shipping else 'billing'})")
    print(
        f"–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: {contact_info['first_name']} {contact_info['last_name']} (–∏–∑ {'shipping' if contact_info == shipping else 'billing'})")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å
    assert delivery_address == billing, "‚ùå –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ billing!"
    assert contact_info == shipping, "‚ùå –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–∑ shipping!"

    print("‚úÖ –õ–æ–≥–∏–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    contact_first, contact_last = get_contact_name(contact_info)
    contact_phone = get_contact_phone_e164(contact_info)

    print(f"\nüì± –î–ê–ù–ù–´–ï –î–õ–Ø VCF:")
    print(f"–ò–º—è: {contact_first} {contact_last}")
    print(f"–¢–µ–ª–µ—Ñ–æ–Ω: {contact_phone}")

    assert contact_first == "Valeriia", "‚ùå VCF –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞ (Valeriia)!"
    assert contact_phone == "+380967489260", "‚ùå VCF –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞–∫–∞–∑—á–∏–∫–∞!"

    print("‚úÖ VCF –¥–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ!")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
    delivery_text = build_delivery_address_text(delivery_address)
    print(f"\nüìÑ –ê–î–†–ï–° –í PDF:")
    print(delivery_text)

    assert "–ù–∞—Ç–∞–ª—ñ—è –ö–ª—ñ–Ω–∫" in delivery_text, "‚ùå PDF –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è (–ù–∞—Ç–∞–ª—ñ—è)!"

    print("‚úÖ PDF –∞–¥—Ä–µ—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    from app.services.message_templates import render_simple_confirm_with_contact

    client_message = render_simple_confirm_with_contact(
        order_data,
        contact_first,
        contact_last
    )

    print(f"\nüí¨ –°–û–û–ë–©–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–£:")
    print(client_message)

    assert "Valeriia" in client_message, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –∑–∞–∫–∞–∑—á–∏–∫—É (Valeriia)!"

    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ!")

    print(f"\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
    return True


def test_same_addresses():
    """–¢–µ—Å—Ç —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏"""

    print(f"\nüß™ –¢–ï–°–¢ –° –û–î–ò–ù–ê–ö–û–í–´–ú–ò –ê–î–†–ï–°–ê–ú–ò")
    print("=" * 60)

    order_data = {
        "id": 123,
        "order_number": 123,
        "shipping_address": {
            "first_name": "–Ü–≤–∞–Ω",
            "last_name": "–ü–µ—Ç—Ä–µ–Ω–∫–æ",
            "phone": "+380671234567",
            "address1": "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 1",
            "city": "–ö–∏—ó–≤"
        },
        "billing_address": {
            "first_name": "–Ü–≤–∞–Ω",
            "last_name": "–ü–µ—Ç—Ä–µ–Ω–∫–æ",
            "phone": "+380671234567",
            "address1": "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 1",
            "city": "–ö–∏—ó–≤"
        }
    }

    from app.services.address_utils import get_delivery_and_contact_info, addresses_are_same
    from app.services.message_templates import render_simple_confirm_with_contact

    shipping = order_data['shipping_address']
    billing = order_data['billing_address']

    are_same = addresses_are_same(shipping, billing)
    print(f"–ê–¥—Ä–µ—Å–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ: {are_same}")

    delivery_address, contact_info = get_delivery_and_contact_info(order_data)

    # –ü—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–∞—Ö –æ–±–∞ –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ shipping
    assert delivery_address == shipping, "‚ùå –ü—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–∞—Ö –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–∑ shipping!"
    assert contact_info == shipping, "‚ùå –ü—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–∞—Ö –∫–æ–Ω—Ç–∞–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ shipping!"

    # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ —Ç–æ–º—É –∂–µ —á–µ–ª–æ–≤–µ–∫—É
    from app.services.address_utils import get_contact_name
    contact_first, contact_last = get_contact_name(contact_info)

    client_message = render_simple_confirm_with_contact(
        order_data,
        contact_first,
        contact_last
    )

    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {client_message}")
    assert "–Ü–≤–∞–Ω" in client_message, "‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –Ü–≤–∞–Ω—É!"

    print("‚úÖ –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""

    try:
        # –¢–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏
        test_fixed_logic()

        # –¢–µ—Å—Ç —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏
        test_same_addresses()

        print("\n" + "=" * 60)
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\nüìù –ò–¢–û–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê:")
        print("üîÑ –ö–æ–≥–¥–∞ –∞–¥—Ä–µ—Å–∞ –†–ê–ó–ù–´–ï:")
        print("   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –∑–∞–∫–∞–∑—á–∏–∫ (shipping)")
        print("   ‚Ä¢ VCF ‚Üí –∑–∞–∫–∞–∑—á–∏–∫ (shipping)")
        print("   ‚Ä¢ PDF ‚Üí –ø–æ–ª—É—á–∞—Ç–µ–ª—å (billing)")
        print("üîÑ –ö–æ–≥–¥–∞ –∞–¥—Ä–µ—Å–∞ –û–î–ò–ù–ê–ö–û–í–´–ï:")
        print("   ‚Ä¢ –í—Å–µ ‚Üí –∏–∑ shipping")
        print("=" * 60)

    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ê–•: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()