# app/bot/routers/navigation.py - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
"""–†–æ—É—Ç–µ—Ä –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, —Å–ø–∏—Å–∫–∏ –∑–∞–∫–∞–∑–æ–≤, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"""

from datetime import datetime
from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton

from app.db import get_session
from app.models import Order, OrderStatus
from app.bot.services.message_builder import get_status_emoji

from .shared import (
    debug_print,
    update_navigation_message,
    main_menu_keyboard,
    stats_keyboard,
    orders_list_keyboard,
    back_to_menu_keyboard
)

router = Router()


@router.callback_query(F.data == "menu:main")
async def on_main_menu(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    debug_print(f"Main menu callback from user {callback.from_user.id}")

    await update_navigation_message(
        callback.bot,
        callback.message.chat.id,
        callback.from_user.id,
        "üè† <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        main_menu_keyboard()
    )
    await callback.answer()


# –ò–°–ü–†–ê–í–õ–ï–ù–û: –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä, –∏—Å–∫–ª—é—á–∞—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ orders.py
@router.callback_query(F.data.regexp(r"^orders:list:(pending|all):offset=\d+$"))
async def on_orders_list(callback: CallbackQuery):
    """–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ - –¢–û–õ–¨–ö–û —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±–µ–∑ order_id"""
    debug_print(f"Orders list callback: {callback.data} from user {callback.from_user.id}")

    parts = callback.data.split(":")
    if len(parts) < 4:
        await callback.answer("‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ", show_alert=True)
        return

    kind = parts[2]
    try:
        offset = int(parts[3].replace("offset=", ""))
    except:
        offset = 0

    PAGE_SIZE = 5
    debug_print(f"Processing orders list: kind={kind}, offset={offset}")

    with get_session() as session:
        query = session.query(Order)

        if kind == "pending":
            query = query.filter(Order.status.in_([OrderStatus.NEW, OrderStatus.WAITING_PAYMENT]))

        query = query.order_by(
            Order.order_number.desc().nullslast(),
            Order.id.desc()
        )

        total = query.count()
        orders = query.offset(offset).limit(PAGE_SIZE).all()

        if not orders:
            await update_navigation_message(
                callback.bot,
                callback.message.chat.id,
                callback.from_user.id,
                "üì≠ –ù–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è",
                back_to_menu_keyboard()
            )
            await callback.answer()
            return

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        if kind == "pending":
            text = "üìã <b>–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b>\n\n"
        else:
            text = "üì¶ <b>–í—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</b>\n\n"

        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞
        order_buttons = []
        for order in orders:
            order_no = order.order_number or order.id
            customer = f"{order.customer_first_name or ''} {order.customer_last_name or ''}".strip() or "–ë–µ–∑ —ñ–º–µ–Ω—ñ"
            emoji = get_status_emoji(order.status)

            text += f"{emoji} #{order_no} ‚Ä¢ {customer}\n"

            button_text = f"{emoji} #{order_no} ‚Ä¢ {customer[:20]}"
            order_buttons.append([
                InlineKeyboardButton(text=button_text, callback_data=f"order:{order.id}:view")
            ])

        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = orders_list_keyboard(kind, offset, PAGE_SIZE, total, has_orders=True)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –≤ –Ω–∞—á–∞–ª–æ
        full_keyboard = order_buttons + keyboard.inline_keyboard

        from aiogram.types import InlineKeyboardMarkup
        final_keyboard = InlineKeyboardMarkup(inline_keyboard=full_keyboard)

        await update_navigation_message(
            callback.bot,
            callback.message.chat.id,
            callback.from_user.id,
            text,
            final_keyboard
        )

    await callback.answer()


@router.callback_query(F.data == "stats:show")
async def on_stats_show(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    debug_print(f"Stats callback from user {callback.from_user.id}")

    with get_session() as session:
        total = session.query(Order).count()
        new = session.query(Order).filter(Order.status == OrderStatus.NEW).count()
        waiting = session.query(Order).filter(Order.status == OrderStatus.WAITING_PAYMENT).count()
        paid = session.query(Order).filter(Order.status == OrderStatus.PAID).count()
        cancelled = session.query(Order).filter(Order.status == OrderStatus.CANCELLED).count()

        today = datetime.utcnow().replace(hour=0, minute=0, second=0, microsecond=0)
        today_count = session.query(Order).filter(Order.created_at >= today).count()

        current_time = datetime.now().strftime('%H:%M')

        stats_text = f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω—å:</b>

üì¶ –í—Å—å–æ–≥–æ: {total}
üìÖ –°—å–æ–≥–æ–¥–Ω—ñ: {today_count}

<b>–ó–∞ —Å—Ç–∞—Ç—É—Å–∞–º–∏:</b>
üÜï –ù–æ–≤–∏—Ö: {new}
‚è≥ –û—á—ñ–∫—É—é—Ç—å –æ–ø–ª–∞—Ç—É: {waiting}
‚úÖ –û–ø–ª–∞—á–µ–Ω–∏—Ö: {paid}
‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–∏—Ö: {cancelled}

<i>–û–Ω–æ–≤–ª–µ–Ω–æ: {current_time}</i>"""

        await update_navigation_message(
            callback.bot,
            callback.message.chat.id,
            callback.from_user.id,
            stats_text,
            stats_keyboard()
        )

    await callback.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞")


@router.callback_query(F.data == "stats:refresh")
async def on_stats_refresh(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    debug_print(f"Stats refresh from user {callback.from_user.id}")
    callback.data = "stats:show"
    await on_stats_show(callback)


@router.callback_query(F.data == "noop")
async def on_noop(callback: CallbackQuery):
    """–ü—É—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫"""
    await callback.answer()