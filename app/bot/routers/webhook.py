# app/bot/routers/webhook.py - –ü–û–õ–ù–û–ï –ò–ì–ù–û–†–ò–†–û–í–ê–ù–ò–ï –ù–ï–ê–í–¢–û–†–ò–ó–û–í–ê–ù–ù–´–•
"""–†–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook –∑–∞–∫–∞–∑–æ–≤ —Å –∫–Ω–æ–ø–∫–æ–π '–ó–∞–∫—Ä–∏—Ç–∏'"""

from aiogram import Router, F
from aiogram.types import CallbackQuery

from .shared import (
    debug_print,
    check_permission,
    get_webhook_messages,
    clear_webhook_messages,
    get_order_file_messages,
    clear_order_file_messages
)

router = Router()


async def cleanup_webhook_order(bot, chat_id: int, order_id: int) -> None:
    """–£–¥–∞–ª—è–µ–º –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è webhook –∑–∞–∫–∞–∑–∞: –∫–∞—Ä—Ç–æ—á–∫—É + —Ñ–∞–π–ª—ã"""
    debug_print(f"üßπ WEBHOOK CLEANUP START: order {order_id}")

    # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ webhook —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    webhook_messages = get_webhook_messages(order_id)
    debug_print(f"üßπ Found {len(webhook_messages)} webhook messages: {list(webhook_messages)}")

    # 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ (–æ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
    from .shared import user_order_files
    all_file_messages = set()

    for user_id in user_order_files:
        file_messages = get_order_file_messages(user_id, order_id)
        all_file_messages.update(file_messages)
        debug_print(f"üßπ User {user_id} has {len(file_messages)} file messages for order {order_id}")

    debug_print(f"üßπ Total file messages to delete: {len(all_file_messages)}")

    # 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    deleted_count = 0
    all_messages = webhook_messages | all_file_messages

    for msg_id in all_messages:
        try:
            debug_print(f"üßπ Deleting message {msg_id}...")
            await bot.delete_message(chat_id, msg_id)
            deleted_count += 1
            debug_print(f"‚úÖ Deleted message {msg_id}")
        except Exception as e:
            debug_print(f"‚ùå Failed to delete message {msg_id}: {e}", "WARN")

    # 4. –û—á–∏—â–∞–µ–º —Ç—Ä–µ–∫–∏–Ω–≥
    clear_webhook_messages(order_id)

    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user_id in list(user_order_files.keys()):
        clear_order_file_messages(user_id, order_id)

    debug_print(
        f"üßπ WEBHOOK CLEANUP COMPLETE: Deleted {deleted_count}/{len(all_messages)} messages for order {order_id}")


@router.callback_query(F.data.startswith("webhook:") & F.data.contains(":close"))
async def on_webhook_close(callback: CallbackQuery):
    """–ö–Ω–æ–ø–∫–∞ '–ó–∞–∫—Ä–∏—Ç–∏' –¥–ª—è webhook –∑–∞–∫–∞–∑–æ–≤ - –ü–û–õ–ù–û–ï –ò–ì–ù–û–†–ò–†–û–í–ê–ù–ò–ï –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö"""
    if not check_permission(callback.from_user.id):
        return

    parts = callback.data.split(":")
    if len(parts) != 3:
        await callback.answer("‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ", show_alert=True)
        return

    order_id = int(parts[1])
    debug_print(f"üö® WEBHOOK CLOSE: order {order_id} from authorized user {callback.from_user.id}")

    # –£–¥–∞–ª—è–µ–º –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–æ–≥–æ webhook –∑–∞–∫–∞–∑–∞
    await cleanup_webhook_order(
        callback.bot,
        callback.message.chat.id,
        order_id
    )

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback (—á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –≤ Telegram)
    await callback.answer("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ")

    debug_print(f"‚úÖ Webhook order {order_id} completely closed by authorized user {callback.from_user.id}")


# –£–î–ê–õ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
# –û–Ω–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞–ª–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ä–æ—É—Ç–µ—Ä–∞–º–∏ orders.py –∏ management.py
# –¢–µ–ø–µ—Ä—å webhook —Ä–æ—É—Ç–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¢–û–õ–¨–ö–û –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä–∏—Ç–∏" —Å –ø–æ–ª–Ω—ã–º –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö