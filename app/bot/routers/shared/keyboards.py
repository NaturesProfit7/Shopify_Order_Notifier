# app/bot/routers/shared/keyboards.py - –ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ê–î–ê–ü–¢–ò–í–ù–´–ú–ò –ö–ù–û–ü–ö–ê–ú–ò
"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.models import Order, OrderStatus
from .state import get_navigation_message_id


def is_from_webhook(user_id: int) -> bool:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –ø—Ä–∏—à–µ–ª –∏–∑ webhook (–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é)"""
    return get_navigation_message_id(user_id) is None


def main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    buttons = [
        [InlineKeyboardButton(text="üìã –ù–µ–æ–±—Ä–æ–±–ª–µ–Ω—ñ", callback_data="orders:list:new:offset=0")],
        [InlineKeyboardButton(text="üí≥ –û—á—ñ–∫—É—é—Ç—å –æ–ø–ª–∞—Ç–∏", callback_data="orders:list:waiting:offset=0")],
        [InlineKeyboardButton(text="üì¶ –í—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="orders:list:all:offset=0")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats:show")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def stats_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    buttons = [[
        InlineKeyboardButton(text="üîÑ –û–Ω–æ–≤–∏—Ç–∏", callback_data="stats:refresh"),
        InlineKeyboardButton(text="üè† –ú–µ–Ω—é", callback_data="menu:main")
    ]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def back_to_menu_keyboard() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    buttons = [[
        InlineKeyboardButton(text="üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="menu:main")
    ]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def orders_list_keyboard(kind: str, offset: int, page_size: int,
                         total: int, has_orders: bool = True) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    buttons = []

    if has_orders:
        # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
        nav_buttons = []
        if offset > 0:
            nav_buttons.append(
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"orders:list:{kind}:offset={offset - page_size}")
            )

        current_page = (offset // page_size) + 1
        total_pages = (total + page_size - 1) // page_size
        nav_buttons.append(
            InlineKeyboardButton(text=f"üìÑ {current_page}/{total_pages}", callback_data="noop")
        )

        if offset + page_size < total:
            nav_buttons.append(
                InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"orders:list:{kind}:offset={offset + page_size}")
            )

        if nav_buttons:
            buttons.append(nav_buttons)

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    buttons.append([
        InlineKeyboardButton(text="üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data="menu:main")
    ])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def order_card_keyboard(order: Order, user_id: int = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–∫–∞–∑–∞ - –ê–î–ê–ü–¢–ò–í–ù–ê–Ø –ø–æ–¥ –∏—Å—Ç–æ—á–Ω–∏–∫"""
    buttons = []

    # –ö–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
    if order.status == OrderStatus.NEW:
        buttons.append([
            InlineKeyboardButton(text="‚úÖ –ó–≤'—è–∑–∞–ª–∏—Å—å", callback_data=f"order:{order.id}:contacted"),
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞–Ω–Ω—è", callback_data=f"order:{order.id}:cancel")
        ])
    elif order.status == OrderStatus.WAITING_PAYMENT:
        buttons.append([
            InlineKeyboardButton(text="üí∞ –û–ø–ª–∞—Ç–∏–ª–∏", callback_data=f"order:{order.id}:paid"),
            InlineKeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞–Ω–Ω—è", callback_data=f"order:{order.id}:cancel")
        ])

    # –§–∞–π–ª—ã
    buttons.append([
        InlineKeyboardButton(text="üìÑ PDF", callback_data=f"order:{order.id}:resend:pdf"),
        InlineKeyboardButton(text="üì± VCF", callback_data=f"order:{order.id}:resend:vcf")
    ])

    # –†–µ–∫–≤–∏–∑–∏—Ç—ã
    buttons.append([
        InlineKeyboardButton(text="üí≥ –†–µ–∫–≤—ñ–∑–∏—Ç–∏", callback_data=f"order:{order.id}:payment")
    ])

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    if order.status in [OrderStatus.NEW, OrderStatus.WAITING_PAYMENT]:
        buttons.append([
            InlineKeyboardButton(text="üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä", callback_data=f"order:{order.id}:comment"),
            InlineKeyboardButton(text="‚è∞ –ù–∞–≥–∞–¥–∞—Ç–∏", callback_data=f"order:{order.id}:reminder")
        ])

    # –ê–î–ê–ü–¢–ò–í–ù–ê–Ø –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    if user_id and is_from_webhook(user_id):
        # –ó–∞–∫–∞–∑ –∏–∑ webhook - –∫–Ω–æ–ø–∫–∞ "–ó–∞–∫—Ä—ã—Ç—å"
        buttons.append([
            InlineKeyboardButton(
                text="‚ùå –ó–∞–∫—Ä–∏—Ç–∏",
                callback_data=f"order:{order.id}:close"
            )
        ])
    else:
        # –ó–∞–∫–∞–∑ –∏–∑ –º–µ–Ω—é - –∫–Ω–æ–ø–∫–∞ "–î–æ —Å–ø–∏—Å–∫—É"
        buttons.append([
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –î–æ —Å–ø–∏—Å–∫—É",
                callback_data=f"order:{order.id}:back_to_list"
            )
        ])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def reminder_time_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    buttons = [
        [
            InlineKeyboardButton(text="15 —Ö–≤", callback_data=f"reminder:{order_id}:15"),
            InlineKeyboardButton(text="30 —Ö–≤", callback_data=f"reminder:{order_id}:30"),
            InlineKeyboardButton(text="1 –≥–æ–¥", callback_data=f"reminder:{order_id}:60")
        ],
        [
            InlineKeyboardButton(text="2 –≥–æ–¥", callback_data=f"reminder:{order_id}:120"),
            InlineKeyboardButton(text="4 –≥–æ–¥", callback_data=f"reminder:{order_id}:240"),
            InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞", callback_data=f"reminder:{order_id}:1440")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"order:{order_id}:back_to_list")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)